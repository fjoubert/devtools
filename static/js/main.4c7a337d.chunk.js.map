{"version":3,"sources":["util/withErrorHandingWrapper.tsx","tools/uuid4.tsx","tools/urls.tsx","tools/json.tsx","tools/base64.tsx","images/notthedroids.gif","tools/time.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["withErrorHandling","fn","setError","clearError","result","e","message","Uuid4","errorHandlerProps","generateUuidv4","n","Array","map","replace","c","r","Math","random","toString","useState","amountToGenerate","setAmountToGenerate","join","value","setValue","handleInputChange","newAmount","parseInt","target","isNaN","autoFocus","onFocus","select","onChange","placeholder","data-testid","type","min","max","onClick","Urls","handleClick","action","encodeURIComponent","decodeURIComponent","prettify","json","JSON","stringify","parse","minify","escape","unescape","unescaped","Json","abc","def","ghi","jkl","Base64","handleEncodeClick","fromByteArray","TextEncoder","encode","handleDecodeClick","str","test","Error","validateBase64","TextDecoder","decode","toByteArray","defaultDuration","Duration","fromObject","years","months","weeks","days","hours","minutes","seconds","milliseconds","computeDuration","duration","durationFormat","values","formattedString","toFormat","humanized","HumanizeDuration","as","computeTimestamp","dateTime","timeFormat","unixTimestamp","toSeconds","isoTimestamp","toISO","RFC2822","toRFC2822","tools","path","title","description","Component","setTimeFormat","setDurationFormat","DateTime","utc","timestamp","setTimestamp","setDuration","useEffect","setTimestampFromDateTime","isValid","invalidExplanation","setDurationFromDurationObject","durationSegment","set","handleFocus","className","fromSeconds","href","rel","fromFormat","fromISO","fromRFC2822","defaultValue","id","unshift","toolElements","key","to","Page404","src","gif404","alt","App","error","routeComponents","exact","navComponents","basename","process","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c7a337d.chunk.js","sourcesContent":["export interface ErrorHandlerProps {\n    setError: Function;\n    clearError: Function;\n}\n\nexport function withErrorHandling<T>(fn: (...args: any[]) => T, { setError, clearError }: ErrorHandlerProps): (...args: any[]) => T {\n    return function (...args: any[]) {\n        let result: any;\n        try {\n            result = fn(...args);\n            clearError();\n        } catch (e) {\n            setError(e.message);\n        }\n        return result;\n    };\n}\n\nexport default withErrorHandling;","import { ChangeEvent, useState } from 'react';\nimport withErrorHandling, { ErrorHandlerProps } from '../util/withErrorHandingWrapper';\n\nconst Uuid4 = (errorHandlerProps: ErrorHandlerProps) => {\n\n    const generateUuidv4 = (n: number) => {\n        return [...Array(n)].map(() => {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n                // eslint-disable-next-line no-mixed-operators\n                let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n                return v.toString(16);\n            });\n        });\n    };\n\n    const [amountToGenerate, setAmountToGenerate] = useState<number>(25);\n    const [value, setValue] = useState<string>(generateUuidv4(amountToGenerate).join('\\n') + '\\n');\n\n    const handleClick = () => {\n        setValue(generateUuidv4(amountToGenerate).join('\\n') + '\\n');\n    };\n\n    const handleInputChange = withErrorHandling((e: ChangeEvent<HTMLInputElement>) => {\n        let newAmount = parseInt(e.target.value);\n        if (isNaN(newAmount)) {\n            newAmount = 1;\n        }\n        setAmountToGenerate(newAmount);\n    }, errorHandlerProps);\n\n    return (\n        <>\n            <textarea\n                autoFocus\n                onFocus={(e) => e.target.select()}\n                value={value} onChange={(e) => setValue(e.target.value)}\n                placeholder=\"Click Generate UUIDs\"\n                data-testid=\"textareadTestId\">\n            </textarea>\n            <div>\n                <input data-testid=\"inputTestId\" type=\"number\" value={amountToGenerate} min=\"1\" max=\"10000\" onChange={handleInputChange} />\n                <button onClick={handleClick}>Generate UUIDs</button>\n            </div>\n        </>\n    );\n};\n\nexport default Uuid4;\n","import { useState } from 'react';\nimport withErrorHandling, { ErrorHandlerProps } from '../util/withErrorHandingWrapper';\n\nconst Urls = (errorHandlerProps: ErrorHandlerProps) => {\n\n    const [value, setValue] = useState<string>(\"1234 abcd #\");\n\n    const handleClick = withErrorHandling((action: Function) => {\n        setValue(action(value));\n    }, errorHandlerProps);\n\n    return (\n        <>\n            <textarea\n                autoFocus\n                onFocus={(e) => e.target.select()}\n                value={value} onChange={(e) => setValue(e.target.value)}\n                placeholder=\"Enter any text to encode/decode\"\n                data-testid=\"textareadTestId\">\n            </textarea>\n            <div>\n                <button onClick={() => { handleClick(encodeURIComponent); }}>Encode URL</button>\n                <button onClick={() => { handleClick(decodeURIComponent); }}>Decode URL</button>\n            </div>\n        </>\n    );\n};\n\nexport default Urls;\n","import { useState } from 'react';\nimport withErrorHandling, { ErrorHandlerProps } from '../util/withErrorHandingWrapper';\n\nexport const prettify = (json: string) => {\n    return JSON.stringify(JSON.parse(json), null, 2);\n};\n\nexport const minify = (json: string) => {\n    return JSON.stringify(JSON.parse(json));\n};\n\nexport const escape = (json: string) => {\n    JSON.parse(json); // validate before escaping\n    return json.replace(/[\\\\]/g, '\\\\\\\\')\n        .replace(/[\\/]/g, '\\\\/') // eslint-disable-line no-useless-escape\n        .replace(/[\\b]/g, '\\\\b')\n        .replace(/[\\f]/g, '\\\\f')\n        .replace(/[\\n]/g, '\\\\n')\n        .replace(/[\\r]/g, '\\\\r')\n        .replace(/[\\t]/g, '\\\\t')\n        .replace(/[\\\"]/g, '\\\\\"'); // eslint-disable-line no-useless-escape\n};\n\nexport const unescape = (json: string) => {\n    let unescaped = json\n        .replace(/\\\\/g, '\\\\')\n        .replace(/\\//g, '/')\n        .replace(/\\\\b/g, '\\b')\n        .replace(/\\\\f/g, '\\f')\n        .replace(/\\\\n/g, '\\n')\n        .replace(/\\\\r/g, '\\r')\n        .replace(/\\\\t/g, '\\t')\n        .replace(/\\\\\"/g, '\"'); // eslint-disable-line no-useless-escape\n    return JSON.stringify(JSON.parse(unescaped));\n};\n\nconst Json = (errorHandlerProps: ErrorHandlerProps) => {\n\n    const [value, setValue] = useState<string>(JSON.stringify({ abc: 123, def: 456, ghi: { jkl: 789 } }, null, 2));\n\n    const handleClick = withErrorHandling((action: Function) => {\n        setValue(action(value));\n    }, errorHandlerProps);\n\n    return (\n        <>\n            <textarea\n                autoFocus\n                onFocus={(e) => e.target.select()}\n                value={value} onChange={(e) => setValue(e.target.value)}\n                placeholder=\"Enter a JSON string and click a button\"\n                data-testid=\"textareadTestId\">\n            </textarea>\n            <div>\n                <button onClick={() => { handleClick(prettify); }}>Prettify</button>\n                <button onClick={() => { handleClick(minify); }}>Minify</button>\n                <button onClick={() => { handleClick(escape); }}>Escape</button>\n                <button onClick={() => { handleClick(unescape); }}>Unescape</button>\n            </div>\n        </>\n    );\n};\n\nexport default Json;\n","import { useState } from 'react';\nimport { toByteArray, fromByteArray } from 'base64-js';\nimport withErrorHandling, { ErrorHandlerProps } from '../util/withErrorHandingWrapper';\n\nconst Base64 = (errorHandlerProps: ErrorHandlerProps) => {\n\n    const [value, setValue] = useState<string>(\"1234abcd\");\n\n    const handleEncodeClick = withErrorHandling(() => {\n        setValue(fromByteArray(new TextEncoder().encode(value)));\n    }, errorHandlerProps);\n\n    const handleDecodeClick = withErrorHandling(() => {\n        validateBase64(value);\n        setValue(new TextDecoder('utf-8').decode(toByteArray(value)));\n    }, errorHandlerProps);\n\n    function validateBase64(str: string) {\n        const format = /^[a-zA-Z0-9+/_-]*={0,2}$/;\n        const valid = format.test(str);\n        if (!valid) {\n            throw new Error('Invalid base64 string, it must match the pattern /^[a-zA-Z0-9+/_-]*={0,2}$/');\n        }\n    }\n\n    return (\n        <>\n            <textarea\n                autoFocus\n                onFocus={(e) => e.target.select()}\n                value={value} onChange={(e) => setValue(e.target.value)}\n                placeholder=\"Enter any text to encode/decode\"\n                data-testid=\"textareadTestId\">\n            </textarea>\n            <div>\n                <button onClick={handleEncodeClick}>Base64 Encode</button>\n                <button onClick={handleDecodeClick}>Base64 Decode</button>\n            </div>\n        </>\n    );\n};\n\nexport default Base64;\n","export default __webpack_public_path__ + \"static/media/notthedroids.6cb9be78.gif\";","import { ChangeEvent, useEffect, useState } from 'react';\nimport { DateTime, Duration, DurationObjectUnits } from 'luxon';\nimport HumanizeDuration from 'humanize-duration';\nimport withErrorHandling, { ErrorHandlerProps } from '../util/withErrorHandingWrapper';\n\ninterface ITimestampProps {\n    dateTime: DateTime,\n    unixTimestamp?: number,\n    isoTimestamp?: string,\n    RFC2822?: string,\n    formattedString: string,\n}\n\ninterface IDurationProps {\n    values: Duration,\n    formattedString: string,\n    humanized: string,\n}\n\nconst maxTimestamp = 999999999999;\n\nconst defaultDuration = Duration.fromObject(\n    {\n        years: 0,\n        months: 0,\n        weeks: 0,\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 300,\n        milliseconds: 0,\n    }\n);\n\nconst Time = (errorHandlerProps: ErrorHandlerProps) => {\n\n    const [timeFormat, setTimeFormat] = useState<string>(\"yyyy-MM-dd HH:mm:ss\");\n    const [durationFormat, setDurationFormat] = useState<string>(\"h:mm:ss\");\n\n    const [timestamp, setTimestamp] = useState<ITimestampProps>({\n        dateTime: DateTime.utc(),\n        unixTimestamp: 0,\n        isoTimestamp: '',\n        RFC2822: '',\n        formattedString: '',\n    });\n\n    const [duration, setDuration] = useState<IDurationProps>({\n        values: defaultDuration,\n        formattedString: '',\n        humanized: '',\n    });\n\n    useEffect(() => {\n        setTimestamp(computeTimestamp(DateTime.utc(), timeFormat));\n        setDuration(computeDuration(defaultDuration, durationFormat));\n    }, [durationFormat, timeFormat]);\n\n    const setNow = () => {\n        setTimestamp(computeTimestamp(DateTime.utc(), timeFormat));\n    };\n\n    const setTimestampFromDateTime = withErrorHandling((dateTime: DateTime) => {\n        if (!dateTime.isValid) {\n            throw new Error(dateTime.invalidExplanation!);\n        }\n        setTimestamp(computeTimestamp(dateTime, timeFormat));\n    }, errorHandlerProps);\n\n    const setDurationFromDurationObject = withErrorHandling((durationSegment: DurationObjectUnits) => {\n        duration.values.set(durationSegment);\n        setDuration(computeDuration(duration.values, durationFormat));\n    }, errorHandlerProps);\n\n    const handleFocus = (e: ChangeEvent<HTMLInputElement>) => e.target.select();\n    const handleTextareaFocus = (e: ChangeEvent<HTMLTextAreaElement>) => e.target.select();\n\n    return (\n        <div className=\"timeTool\">\n            <span className=\"divider\">Time<button onClick={setNow}>Now</button></span>\n            <div className=\"timeRow\">\n                <label>Unix (seconds)</label>\n                <input\n                    autoFocus\n                    type=\"text\"\n                    min=\"0\"\n                    max={maxTimestamp}\n                    value={timestamp.unixTimestamp}\n                    onChange={(e) => { setTimestampFromDateTime(DateTime.fromSeconds(parseInt(e.target.value))); }}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Format</label>\n                <a href=\"https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens\" target=\"_blank\" rel=\"noreferrer\">?</a>\n                <input\n                    type=\"text\"\n                    value={timeFormat}\n                    onChange={(e) => setTimeFormat(e.target.value)}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Formatted String</label>\n                <input\n                    type=\"text\"\n                    value={timestamp.formattedString}\n                    onChange={(e) => { setTimestampFromDateTime(DateTime.fromFormat(e.target.value, timeFormat)); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>ISO 8601</label>\n                <input\n                    type=\"text\"\n                    value={timestamp.isoTimestamp}\n                    onChange={(e) => { setTimestampFromDateTime(DateTime.fromISO(e.target.value)); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>RFC2822</label>\n                <input\n                    type=\"text\"\n                    value={timestamp.RFC2822}\n                    onChange={(e) => { setTimestampFromDateTime(DateTime.fromRFC2822(e.target.value)); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <span className=\"divider\">Duration</span>\n            <div className=\"timeRow\">\n                <label>Years</label>\n                <input\n                    type=\"number\"\n                    value={duration.values.years}\n                    onChange={(e) => { setDurationFromDurationObject({ years: parseInt(e.target.value) }); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Months</label>\n                <input\n                    type=\"number\"\n                    value={duration.values.months}\n                    onChange={(e) => { setDurationFromDurationObject({ months: parseInt(e.target.value) }); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Weeks</label>\n                <input\n                    type=\"number\"\n                    value={duration.values.weeks}\n                    onChange={(e) => { setDurationFromDurationObject({ weeks: parseInt(e.target.value) }); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Days</label>\n                <input\n                    type=\"number\"\n                    value={duration.values.days}\n                    onChange={(e) => { setDurationFromDurationObject({ days: parseInt(e.target.value) }); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Hours</label>\n                <input\n                    type=\"number\"\n                    value={duration.values.hours}\n                    onChange={(e) => { setDurationFromDurationObject({ hours: parseInt(e.target.value) }); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Minutes</label>\n                <input\n                    type=\"number\"\n                    value={duration.values.minutes}\n                    onChange={(e) => { setDurationFromDurationObject({ minutes: parseInt(e.target.value) }); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Seconds</label>\n                <input\n                    type=\"number\"\n                    value={duration.values.seconds}\n                    onChange={(e) => { setDurationFromDurationObject({ seconds: parseInt(e.target.value) }); }}\n                    onFocus={handleFocus}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Format</label>\n                <a href=\"https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens\" target=\"_blank\" rel=\"noreferrer\">?</a>\n                <input\n                    type=\"text\"\n                    value={durationFormat}\n                    onChange={(e) => setDurationFormat(e.target.value)}\n                />\n            </div>\n            <div className=\"timeRow\">\n                <label>Formatted String</label>\n                <input\n                    type=\"text\"\n                    defaultValue={duration.formattedString}\n                    onFocus={handleFocus}\n                />\n            </div>\n\n            <label className=\"divider\">Humanized</label>\n            <textarea\n                id=\"inputHumanized\"\n                defaultValue={duration.humanized}\n                onFocus={handleTextareaFocus}\n            />\n        </div>\n    );\n};\n\nexport const computeDuration = (duration: Duration, durationFormat: string): IDurationProps => {\n    return {\n        values: duration,\n        formattedString: duration.toFormat(durationFormat),\n        humanized: HumanizeDuration(duration.as('milliseconds'))\n    };\n};\n\nexport const computeTimestamp = (dateTime: DateTime, timeFormat: string): ITimestampProps => {\n\n    return {\n        dateTime: dateTime,\n        unixTimestamp: dateTime.toSeconds(),\n        isoTimestamp: dateTime.toISO(),\n        RFC2822: dateTime.toRFC2822(),\n        formattedString: dateTime.toFormat(timeFormat)\n    };\n};\n\nexport default Time;\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport Uuid4 from './tools/uuid4';\nimport Urls from './tools/urls';\nimport Json from './tools/json';\nimport Base64 from './tools/base64';\nimport gif404 from './images/notthedroids.gif';\nimport Time from './tools/time';\n\nexport const tools = [\n  {\n    path: \"/base64\",\n    title: \"Base64\",\n    description: \"encode, decode\",\n    Component: Base64,\n  },\n  {\n    path: \"/json\",\n    title: \"JSON\",\n    description: \"prettify, minify, escape, unescape\",\n    Component: Json\n  },\n  {\n    path: \"/time\",\n    title: \"Time\",\n    description: \"timestamps, durations\",\n    Component: Time\n  },\n  {\n    path: \"/urls\",\n    title: \"URLs\",\n    description: \"encode, decode\",\n    Component: Urls\n  },\n  {\n    path: \"/uuids\",\n    title: \"UUIDs\",\n    description: \"generate random UUIDs\",\n    Component: Uuid4\n  },\n];\n\nconst Home = () => {\n  const toolElements = tools.map(({ path, title, description }, key) => {\n    if (path === '/') return null;\n    return (\n      <div className=\"toolCard\" key={key}>\n        <Link to={path}>{title}: {description}</Link>\n      </div>);\n  });\n  return (\n    <div>\n      <h2>Here are some tools that could come in handy...</h2>\n      {toolElements}\n    </div>\n  );\n};\n\ntools.unshift({\n  path: \"/\",\n  title: \"Home\",\n  description: \"\",\n  Component: Home\n});\n\nconst Page404 = () => (\n  <>\n    <img src={gif404} alt=\"Page not found\" />\n    <h1>This is not the page you are looking for (404).</h1>\n  </>\n);\nconst Footer = () => (\n  <>\n    <div id=\"footer\"><a href=\"https://github.com/fjoubert/devtools\">View on GitHub</a></div>\n  </>\n);\n\nconst App = () => {\n\n  const [error, setError] = useState<string>(\"\");\n\n  const routeComponents = tools.map(({ path, Component }, key) => {\n    return (\n      <Route exact path={path} key={key}>\n        <Component setError={setError} clearError={() => setError(\"\")} />\n      </Route>\n    );\n  });\n\n  const navComponents = tools.map(({ path, title }, key) =>\n    <span key={key}><Link to={path}>{title}</Link></span>\n  );\n\n  return (\n    // basename to get BrowserRouter to work with github pages\n    // https://itnext.io/so-you-want-to-host-your-single-age-react-app-on-github-pages-a826ab01e48\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav>\n            {navComponents}\n          </nav>\n        </header>\n\n        <Switch>\n          {routeComponents}\n          <Route component={Page404} />\n        </Switch>\n        <span className=\"error\">{error}</span>\n        {Footer()}\n      </div>\n    </Router >\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}